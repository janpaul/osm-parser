// source: src/proto/osmformat.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

goog.exportSymbol('proto.OSMPBF.ChangeSet', null, global);
goog.exportSymbol('proto.OSMPBF.DenseInfo', null, global);
goog.exportSymbol('proto.OSMPBF.DenseNodes', null, global);
goog.exportSymbol('proto.OSMPBF.HeaderBBox', null, global);
goog.exportSymbol('proto.OSMPBF.HeaderBlock', null, global);
goog.exportSymbol('proto.OSMPBF.Info', null, global);
goog.exportSymbol('proto.OSMPBF.Node', null, global);
goog.exportSymbol('proto.OSMPBF.PrimitiveBlock', null, global);
goog.exportSymbol('proto.OSMPBF.PrimitiveGroup', null, global);
goog.exportSymbol('proto.OSMPBF.Relation', null, global);
goog.exportSymbol('proto.OSMPBF.Relation.MemberType', null, global);
goog.exportSymbol('proto.OSMPBF.StringTable', null, global);
goog.exportSymbol('proto.OSMPBF.Way', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.OSMPBF.HeaderBlock = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.OSMPBF.HeaderBlock.repeatedFields_, null);
};
goog.inherits(proto.OSMPBF.HeaderBlock, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.OSMPBF.HeaderBlock.displayName = 'proto.OSMPBF.HeaderBlock';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.OSMPBF.HeaderBBox = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.OSMPBF.HeaderBBox, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.OSMPBF.HeaderBBox.displayName = 'proto.OSMPBF.HeaderBBox';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.OSMPBF.PrimitiveBlock = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.OSMPBF.PrimitiveBlock.repeatedFields_, null);
};
goog.inherits(proto.OSMPBF.PrimitiveBlock, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.OSMPBF.PrimitiveBlock.displayName = 'proto.OSMPBF.PrimitiveBlock';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.OSMPBF.PrimitiveGroup = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.OSMPBF.PrimitiveGroup.repeatedFields_, null);
};
goog.inherits(proto.OSMPBF.PrimitiveGroup, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.OSMPBF.PrimitiveGroup.displayName = 'proto.OSMPBF.PrimitiveGroup';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.OSMPBF.StringTable = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.OSMPBF.StringTable.repeatedFields_, null);
};
goog.inherits(proto.OSMPBF.StringTable, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.OSMPBF.StringTable.displayName = 'proto.OSMPBF.StringTable';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.OSMPBF.Info = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.OSMPBF.Info, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.OSMPBF.Info.displayName = 'proto.OSMPBF.Info';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.OSMPBF.DenseInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.OSMPBF.DenseInfo.repeatedFields_, null);
};
goog.inherits(proto.OSMPBF.DenseInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.OSMPBF.DenseInfo.displayName = 'proto.OSMPBF.DenseInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.OSMPBF.ChangeSet = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.OSMPBF.ChangeSet, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.OSMPBF.ChangeSet.displayName = 'proto.OSMPBF.ChangeSet';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.OSMPBF.Node = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.OSMPBF.Node.repeatedFields_, null);
};
goog.inherits(proto.OSMPBF.Node, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.OSMPBF.Node.displayName = 'proto.OSMPBF.Node';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.OSMPBF.DenseNodes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.OSMPBF.DenseNodes.repeatedFields_, null);
};
goog.inherits(proto.OSMPBF.DenseNodes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.OSMPBF.DenseNodes.displayName = 'proto.OSMPBF.DenseNodes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.OSMPBF.Way = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.OSMPBF.Way.repeatedFields_, null);
};
goog.inherits(proto.OSMPBF.Way, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.OSMPBF.Way.displayName = 'proto.OSMPBF.Way';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.OSMPBF.Relation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.OSMPBF.Relation.repeatedFields_, null);
};
goog.inherits(proto.OSMPBF.Relation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.OSMPBF.Relation.displayName = 'proto.OSMPBF.Relation';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.OSMPBF.HeaderBlock.repeatedFields_ = [4,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.OSMPBF.HeaderBlock.prototype.toObject = function(opt_includeInstance) {
  return proto.OSMPBF.HeaderBlock.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.OSMPBF.HeaderBlock} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.OSMPBF.HeaderBlock.toObject = function(includeInstance, msg) {
  var f, obj = {
    bbox: (f = msg.getBbox()) && proto.OSMPBF.HeaderBBox.toObject(includeInstance, f),
    requiredFeaturesList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    optionalFeaturesList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,
    writingprogram: (f = jspb.Message.getField(msg, 16)) == null ? undefined : f,
    source: (f = jspb.Message.getField(msg, 17)) == null ? undefined : f,
    osmosisReplicationTimestamp: (f = jspb.Message.getField(msg, 32)) == null ? undefined : f,
    osmosisReplicationSequenceNumber: (f = jspb.Message.getField(msg, 33)) == null ? undefined : f,
    osmosisReplicationBaseUrl: (f = jspb.Message.getField(msg, 34)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.OSMPBF.HeaderBlock}
 */
proto.OSMPBF.HeaderBlock.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.OSMPBF.HeaderBlock;
  return proto.OSMPBF.HeaderBlock.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.OSMPBF.HeaderBlock} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.OSMPBF.HeaderBlock}
 */
proto.OSMPBF.HeaderBlock.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.OSMPBF.HeaderBBox;
      reader.readMessage(value,proto.OSMPBF.HeaderBBox.deserializeBinaryFromReader);
      msg.setBbox(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addRequiredFeatures(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addOptionalFeatures(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setWritingprogram(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    case 32:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setOsmosisReplicationTimestamp(value);
      break;
    case 33:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setOsmosisReplicationSequenceNumber(value);
      break;
    case 34:
      var value = /** @type {string} */ (reader.readString());
      msg.setOsmosisReplicationBaseUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.OSMPBF.HeaderBlock.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.OSMPBF.HeaderBlock.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.OSMPBF.HeaderBlock} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.OSMPBF.HeaderBlock.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBbox();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.OSMPBF.HeaderBBox.serializeBinaryToWriter
    );
  }
  f = message.getRequiredFeaturesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = message.getOptionalFeaturesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeString(
      16,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeString(
      17,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 32));
  if (f != null) {
    writer.writeInt64(
      32,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 33));
  if (f != null) {
    writer.writeInt64(
      33,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 34));
  if (f != null) {
    writer.writeString(
      34,
      f
    );
  }
};


/**
 * optional HeaderBBox bbox = 1;
 * @return {?proto.OSMPBF.HeaderBBox}
 */
proto.OSMPBF.HeaderBlock.prototype.getBbox = function() {
  return /** @type{?proto.OSMPBF.HeaderBBox} */ (
    jspb.Message.getWrapperField(this, proto.OSMPBF.HeaderBBox, 1));
};


/**
 * @param {?proto.OSMPBF.HeaderBBox|undefined} value
 * @return {!proto.OSMPBF.HeaderBlock} returns this
*/
proto.OSMPBF.HeaderBlock.prototype.setBbox = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.OSMPBF.HeaderBlock} returns this
 */
proto.OSMPBF.HeaderBlock.prototype.clearBbox = function() {
  return this.setBbox(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.OSMPBF.HeaderBlock.prototype.hasBbox = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated string required_features = 4;
 * @return {!Array<string>}
 */
proto.OSMPBF.HeaderBlock.prototype.getRequiredFeaturesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.OSMPBF.HeaderBlock} returns this
 */
proto.OSMPBF.HeaderBlock.prototype.setRequiredFeaturesList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.OSMPBF.HeaderBlock} returns this
 */
proto.OSMPBF.HeaderBlock.prototype.addRequiredFeatures = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.OSMPBF.HeaderBlock} returns this
 */
proto.OSMPBF.HeaderBlock.prototype.clearRequiredFeaturesList = function() {
  return this.setRequiredFeaturesList([]);
};


/**
 * repeated string optional_features = 5;
 * @return {!Array<string>}
 */
proto.OSMPBF.HeaderBlock.prototype.getOptionalFeaturesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.OSMPBF.HeaderBlock} returns this
 */
proto.OSMPBF.HeaderBlock.prototype.setOptionalFeaturesList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.OSMPBF.HeaderBlock} returns this
 */
proto.OSMPBF.HeaderBlock.prototype.addOptionalFeatures = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.OSMPBF.HeaderBlock} returns this
 */
proto.OSMPBF.HeaderBlock.prototype.clearOptionalFeaturesList = function() {
  return this.setOptionalFeaturesList([]);
};


/**
 * optional string writingprogram = 16;
 * @return {string}
 */
proto.OSMPBF.HeaderBlock.prototype.getWritingprogram = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.OSMPBF.HeaderBlock} returns this
 */
proto.OSMPBF.HeaderBlock.prototype.setWritingprogram = function(value) {
  return jspb.Message.setField(this, 16, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.OSMPBF.HeaderBlock} returns this
 */
proto.OSMPBF.HeaderBlock.prototype.clearWritingprogram = function() {
  return jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.OSMPBF.HeaderBlock.prototype.hasWritingprogram = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional string source = 17;
 * @return {string}
 */
proto.OSMPBF.HeaderBlock.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.OSMPBF.HeaderBlock} returns this
 */
proto.OSMPBF.HeaderBlock.prototype.setSource = function(value) {
  return jspb.Message.setField(this, 17, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.OSMPBF.HeaderBlock} returns this
 */
proto.OSMPBF.HeaderBlock.prototype.clearSource = function() {
  return jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.OSMPBF.HeaderBlock.prototype.hasSource = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional int64 osmosis_replication_timestamp = 32;
 * @return {number}
 */
proto.OSMPBF.HeaderBlock.prototype.getOsmosisReplicationTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 32, 0));
};


/**
 * @param {number} value
 * @return {!proto.OSMPBF.HeaderBlock} returns this
 */
proto.OSMPBF.HeaderBlock.prototype.setOsmosisReplicationTimestamp = function(value) {
  return jspb.Message.setField(this, 32, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.OSMPBF.HeaderBlock} returns this
 */
proto.OSMPBF.HeaderBlock.prototype.clearOsmosisReplicationTimestamp = function() {
  return jspb.Message.setField(this, 32, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.OSMPBF.HeaderBlock.prototype.hasOsmosisReplicationTimestamp = function() {
  return jspb.Message.getField(this, 32) != null;
};


/**
 * optional int64 osmosis_replication_sequence_number = 33;
 * @return {number}
 */
proto.OSMPBF.HeaderBlock.prototype.getOsmosisReplicationSequenceNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 33, 0));
};


/**
 * @param {number} value
 * @return {!proto.OSMPBF.HeaderBlock} returns this
 */
proto.OSMPBF.HeaderBlock.prototype.setOsmosisReplicationSequenceNumber = function(value) {
  return jspb.Message.setField(this, 33, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.OSMPBF.HeaderBlock} returns this
 */
proto.OSMPBF.HeaderBlock.prototype.clearOsmosisReplicationSequenceNumber = function() {
  return jspb.Message.setField(this, 33, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.OSMPBF.HeaderBlock.prototype.hasOsmosisReplicationSequenceNumber = function() {
  return jspb.Message.getField(this, 33) != null;
};


/**
 * optional string osmosis_replication_base_url = 34;
 * @return {string}
 */
proto.OSMPBF.HeaderBlock.prototype.getOsmosisReplicationBaseUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 34, ""));
};


/**
 * @param {string} value
 * @return {!proto.OSMPBF.HeaderBlock} returns this
 */
proto.OSMPBF.HeaderBlock.prototype.setOsmosisReplicationBaseUrl = function(value) {
  return jspb.Message.setField(this, 34, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.OSMPBF.HeaderBlock} returns this
 */
proto.OSMPBF.HeaderBlock.prototype.clearOsmosisReplicationBaseUrl = function() {
  return jspb.Message.setField(this, 34, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.OSMPBF.HeaderBlock.prototype.hasOsmosisReplicationBaseUrl = function() {
  return jspb.Message.getField(this, 34) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.OSMPBF.HeaderBBox.prototype.toObject = function(opt_includeInstance) {
  return proto.OSMPBF.HeaderBBox.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.OSMPBF.HeaderBBox} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.OSMPBF.HeaderBBox.toObject = function(includeInstance, msg) {
  var f, obj = {
    left: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    right: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    top: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    bottom: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.OSMPBF.HeaderBBox}
 */
proto.OSMPBF.HeaderBBox.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.OSMPBF.HeaderBBox;
  return proto.OSMPBF.HeaderBBox.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.OSMPBF.HeaderBBox} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.OSMPBF.HeaderBBox}
 */
proto.OSMPBF.HeaderBBox.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readSint64());
      msg.setLeft(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readSint64());
      msg.setRight(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readSint64());
      msg.setTop(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readSint64());
      msg.setBottom(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.OSMPBF.HeaderBBox.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.OSMPBF.HeaderBBox.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.OSMPBF.HeaderBBox} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.OSMPBF.HeaderBBox.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeSint64(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeSint64(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeSint64(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeSint64(
      4,
      f
    );
  }
};


/**
 * required sint64 left = 1;
 * @return {number}
 */
proto.OSMPBF.HeaderBBox.prototype.getLeft = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.OSMPBF.HeaderBBox} returns this
 */
proto.OSMPBF.HeaderBBox.prototype.setLeft = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.OSMPBF.HeaderBBox} returns this
 */
proto.OSMPBF.HeaderBBox.prototype.clearLeft = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.OSMPBF.HeaderBBox.prototype.hasLeft = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * required sint64 right = 2;
 * @return {number}
 */
proto.OSMPBF.HeaderBBox.prototype.getRight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.OSMPBF.HeaderBBox} returns this
 */
proto.OSMPBF.HeaderBBox.prototype.setRight = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.OSMPBF.HeaderBBox} returns this
 */
proto.OSMPBF.HeaderBBox.prototype.clearRight = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.OSMPBF.HeaderBBox.prototype.hasRight = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * required sint64 top = 3;
 * @return {number}
 */
proto.OSMPBF.HeaderBBox.prototype.getTop = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.OSMPBF.HeaderBBox} returns this
 */
proto.OSMPBF.HeaderBBox.prototype.setTop = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.OSMPBF.HeaderBBox} returns this
 */
proto.OSMPBF.HeaderBBox.prototype.clearTop = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.OSMPBF.HeaderBBox.prototype.hasTop = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * required sint64 bottom = 4;
 * @return {number}
 */
proto.OSMPBF.HeaderBBox.prototype.getBottom = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.OSMPBF.HeaderBBox} returns this
 */
proto.OSMPBF.HeaderBBox.prototype.setBottom = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.OSMPBF.HeaderBBox} returns this
 */
proto.OSMPBF.HeaderBBox.prototype.clearBottom = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.OSMPBF.HeaderBBox.prototype.hasBottom = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.OSMPBF.PrimitiveBlock.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.OSMPBF.PrimitiveBlock.prototype.toObject = function(opt_includeInstance) {
  return proto.OSMPBF.PrimitiveBlock.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.OSMPBF.PrimitiveBlock} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.OSMPBF.PrimitiveBlock.toObject = function(includeInstance, msg) {
  var f, obj = {
    stringtable: (f = msg.getStringtable()) && proto.OSMPBF.StringTable.toObject(includeInstance, f),
    primitivegroupList: jspb.Message.toObjectList(msg.getPrimitivegroupList(),
    proto.OSMPBF.PrimitiveGroup.toObject, includeInstance),
    granularity: jspb.Message.getFieldWithDefault(msg, 17, 100),
    latOffset: jspb.Message.getFieldWithDefault(msg, 19, 0),
    lonOffset: jspb.Message.getFieldWithDefault(msg, 20, 0),
    dateGranularity: jspb.Message.getFieldWithDefault(msg, 18, 1000)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.OSMPBF.PrimitiveBlock}
 */
proto.OSMPBF.PrimitiveBlock.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.OSMPBF.PrimitiveBlock;
  return proto.OSMPBF.PrimitiveBlock.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.OSMPBF.PrimitiveBlock} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.OSMPBF.PrimitiveBlock}
 */
proto.OSMPBF.PrimitiveBlock.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.OSMPBF.StringTable;
      reader.readMessage(value,proto.OSMPBF.StringTable.deserializeBinaryFromReader);
      msg.setStringtable(value);
      break;
    case 2:
      var value = new proto.OSMPBF.PrimitiveGroup;
      reader.readMessage(value,proto.OSMPBF.PrimitiveGroup.deserializeBinaryFromReader);
      msg.addPrimitivegroup(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setGranularity(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLatOffset(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLonOffset(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDateGranularity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.OSMPBF.PrimitiveBlock.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.OSMPBF.PrimitiveBlock.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.OSMPBF.PrimitiveBlock} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.OSMPBF.PrimitiveBlock.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStringtable();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.OSMPBF.StringTable.serializeBinaryToWriter
    );
  }
  f = message.getPrimitivegroupList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.OSMPBF.PrimitiveGroup.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeInt32(
      17,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 19));
  if (f != null) {
    writer.writeInt64(
      19,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 20));
  if (f != null) {
    writer.writeInt64(
      20,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 18));
  if (f != null) {
    writer.writeInt32(
      18,
      f
    );
  }
};


/**
 * required StringTable stringtable = 1;
 * @return {!proto.OSMPBF.StringTable}
 */
proto.OSMPBF.PrimitiveBlock.prototype.getStringtable = function() {
  return /** @type{!proto.OSMPBF.StringTable} */ (
    jspb.Message.getWrapperField(this, proto.OSMPBF.StringTable, 1, 1));
};


/**
 * @param {!proto.OSMPBF.StringTable} value
 * @return {!proto.OSMPBF.PrimitiveBlock} returns this
*/
proto.OSMPBF.PrimitiveBlock.prototype.setStringtable = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.OSMPBF.PrimitiveBlock} returns this
 */
proto.OSMPBF.PrimitiveBlock.prototype.clearStringtable = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.OSMPBF.PrimitiveBlock.prototype.hasStringtable = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated PrimitiveGroup primitivegroup = 2;
 * @return {!Array<!proto.OSMPBF.PrimitiveGroup>}
 */
proto.OSMPBF.PrimitiveBlock.prototype.getPrimitivegroupList = function() {
  return /** @type{!Array<!proto.OSMPBF.PrimitiveGroup>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.OSMPBF.PrimitiveGroup, 2));
};


/**
 * @param {!Array<!proto.OSMPBF.PrimitiveGroup>} value
 * @return {!proto.OSMPBF.PrimitiveBlock} returns this
*/
proto.OSMPBF.PrimitiveBlock.prototype.setPrimitivegroupList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.OSMPBF.PrimitiveGroup=} opt_value
 * @param {number=} opt_index
 * @return {!proto.OSMPBF.PrimitiveGroup}
 */
proto.OSMPBF.PrimitiveBlock.prototype.addPrimitivegroup = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.OSMPBF.PrimitiveGroup, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.OSMPBF.PrimitiveBlock} returns this
 */
proto.OSMPBF.PrimitiveBlock.prototype.clearPrimitivegroupList = function() {
  return this.setPrimitivegroupList([]);
};


/**
 * optional int32 granularity = 17;
 * @return {number}
 */
proto.OSMPBF.PrimitiveBlock.prototype.getGranularity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 100));
};


/**
 * @param {number} value
 * @return {!proto.OSMPBF.PrimitiveBlock} returns this
 */
proto.OSMPBF.PrimitiveBlock.prototype.setGranularity = function(value) {
  return jspb.Message.setField(this, 17, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.OSMPBF.PrimitiveBlock} returns this
 */
proto.OSMPBF.PrimitiveBlock.prototype.clearGranularity = function() {
  return jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.OSMPBF.PrimitiveBlock.prototype.hasGranularity = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional int64 lat_offset = 19;
 * @return {number}
 */
proto.OSMPBF.PrimitiveBlock.prototype.getLatOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};


/**
 * @param {number} value
 * @return {!proto.OSMPBF.PrimitiveBlock} returns this
 */
proto.OSMPBF.PrimitiveBlock.prototype.setLatOffset = function(value) {
  return jspb.Message.setField(this, 19, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.OSMPBF.PrimitiveBlock} returns this
 */
proto.OSMPBF.PrimitiveBlock.prototype.clearLatOffset = function() {
  return jspb.Message.setField(this, 19, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.OSMPBF.PrimitiveBlock.prototype.hasLatOffset = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional int64 lon_offset = 20;
 * @return {number}
 */
proto.OSMPBF.PrimitiveBlock.prototype.getLonOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 20, 0));
};


/**
 * @param {number} value
 * @return {!proto.OSMPBF.PrimitiveBlock} returns this
 */
proto.OSMPBF.PrimitiveBlock.prototype.setLonOffset = function(value) {
  return jspb.Message.setField(this, 20, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.OSMPBF.PrimitiveBlock} returns this
 */
proto.OSMPBF.PrimitiveBlock.prototype.clearLonOffset = function() {
  return jspb.Message.setField(this, 20, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.OSMPBF.PrimitiveBlock.prototype.hasLonOffset = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional int32 date_granularity = 18;
 * @return {number}
 */
proto.OSMPBF.PrimitiveBlock.prototype.getDateGranularity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 1000));
};


/**
 * @param {number} value
 * @return {!proto.OSMPBF.PrimitiveBlock} returns this
 */
proto.OSMPBF.PrimitiveBlock.prototype.setDateGranularity = function(value) {
  return jspb.Message.setField(this, 18, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.OSMPBF.PrimitiveBlock} returns this
 */
proto.OSMPBF.PrimitiveBlock.prototype.clearDateGranularity = function() {
  return jspb.Message.setField(this, 18, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.OSMPBF.PrimitiveBlock.prototype.hasDateGranularity = function() {
  return jspb.Message.getField(this, 18) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.OSMPBF.PrimitiveGroup.repeatedFields_ = [1,3,4,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.OSMPBF.PrimitiveGroup.prototype.toObject = function(opt_includeInstance) {
  return proto.OSMPBF.PrimitiveGroup.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.OSMPBF.PrimitiveGroup} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.OSMPBF.PrimitiveGroup.toObject = function(includeInstance, msg) {
  var f, obj = {
    nodesList: jspb.Message.toObjectList(msg.getNodesList(),
    proto.OSMPBF.Node.toObject, includeInstance),
    dense: (f = msg.getDense()) && proto.OSMPBF.DenseNodes.toObject(includeInstance, f),
    waysList: jspb.Message.toObjectList(msg.getWaysList(),
    proto.OSMPBF.Way.toObject, includeInstance),
    relationsList: jspb.Message.toObjectList(msg.getRelationsList(),
    proto.OSMPBF.Relation.toObject, includeInstance),
    changesetsList: jspb.Message.toObjectList(msg.getChangesetsList(),
    proto.OSMPBF.ChangeSet.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.OSMPBF.PrimitiveGroup}
 */
proto.OSMPBF.PrimitiveGroup.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.OSMPBF.PrimitiveGroup;
  return proto.OSMPBF.PrimitiveGroup.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.OSMPBF.PrimitiveGroup} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.OSMPBF.PrimitiveGroup}
 */
proto.OSMPBF.PrimitiveGroup.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.OSMPBF.Node;
      reader.readMessage(value,proto.OSMPBF.Node.deserializeBinaryFromReader);
      msg.addNodes(value);
      break;
    case 2:
      var value = new proto.OSMPBF.DenseNodes;
      reader.readMessage(value,proto.OSMPBF.DenseNodes.deserializeBinaryFromReader);
      msg.setDense(value);
      break;
    case 3:
      var value = new proto.OSMPBF.Way;
      reader.readMessage(value,proto.OSMPBF.Way.deserializeBinaryFromReader);
      msg.addWays(value);
      break;
    case 4:
      var value = new proto.OSMPBF.Relation;
      reader.readMessage(value,proto.OSMPBF.Relation.deserializeBinaryFromReader);
      msg.addRelations(value);
      break;
    case 5:
      var value = new proto.OSMPBF.ChangeSet;
      reader.readMessage(value,proto.OSMPBF.ChangeSet.deserializeBinaryFromReader);
      msg.addChangesets(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.OSMPBF.PrimitiveGroup.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.OSMPBF.PrimitiveGroup.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.OSMPBF.PrimitiveGroup} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.OSMPBF.PrimitiveGroup.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNodesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.OSMPBF.Node.serializeBinaryToWriter
    );
  }
  f = message.getDense();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.OSMPBF.DenseNodes.serializeBinaryToWriter
    );
  }
  f = message.getWaysList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.OSMPBF.Way.serializeBinaryToWriter
    );
  }
  f = message.getRelationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.OSMPBF.Relation.serializeBinaryToWriter
    );
  }
  f = message.getChangesetsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.OSMPBF.ChangeSet.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Node nodes = 1;
 * @return {!Array<!proto.OSMPBF.Node>}
 */
proto.OSMPBF.PrimitiveGroup.prototype.getNodesList = function() {
  return /** @type{!Array<!proto.OSMPBF.Node>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.OSMPBF.Node, 1));
};


/**
 * @param {!Array<!proto.OSMPBF.Node>} value
 * @return {!proto.OSMPBF.PrimitiveGroup} returns this
*/
proto.OSMPBF.PrimitiveGroup.prototype.setNodesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.OSMPBF.Node=} opt_value
 * @param {number=} opt_index
 * @return {!proto.OSMPBF.Node}
 */
proto.OSMPBF.PrimitiveGroup.prototype.addNodes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.OSMPBF.Node, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.OSMPBF.PrimitiveGroup} returns this
 */
proto.OSMPBF.PrimitiveGroup.prototype.clearNodesList = function() {
  return this.setNodesList([]);
};


/**
 * optional DenseNodes dense = 2;
 * @return {?proto.OSMPBF.DenseNodes}
 */
proto.OSMPBF.PrimitiveGroup.prototype.getDense = function() {
  return /** @type{?proto.OSMPBF.DenseNodes} */ (
    jspb.Message.getWrapperField(this, proto.OSMPBF.DenseNodes, 2));
};


/**
 * @param {?proto.OSMPBF.DenseNodes|undefined} value
 * @return {!proto.OSMPBF.PrimitiveGroup} returns this
*/
proto.OSMPBF.PrimitiveGroup.prototype.setDense = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.OSMPBF.PrimitiveGroup} returns this
 */
proto.OSMPBF.PrimitiveGroup.prototype.clearDense = function() {
  return this.setDense(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.OSMPBF.PrimitiveGroup.prototype.hasDense = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated Way ways = 3;
 * @return {!Array<!proto.OSMPBF.Way>}
 */
proto.OSMPBF.PrimitiveGroup.prototype.getWaysList = function() {
  return /** @type{!Array<!proto.OSMPBF.Way>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.OSMPBF.Way, 3));
};


/**
 * @param {!Array<!proto.OSMPBF.Way>} value
 * @return {!proto.OSMPBF.PrimitiveGroup} returns this
*/
proto.OSMPBF.PrimitiveGroup.prototype.setWaysList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.OSMPBF.Way=} opt_value
 * @param {number=} opt_index
 * @return {!proto.OSMPBF.Way}
 */
proto.OSMPBF.PrimitiveGroup.prototype.addWays = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.OSMPBF.Way, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.OSMPBF.PrimitiveGroup} returns this
 */
proto.OSMPBF.PrimitiveGroup.prototype.clearWaysList = function() {
  return this.setWaysList([]);
};


/**
 * repeated Relation relations = 4;
 * @return {!Array<!proto.OSMPBF.Relation>}
 */
proto.OSMPBF.PrimitiveGroup.prototype.getRelationsList = function() {
  return /** @type{!Array<!proto.OSMPBF.Relation>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.OSMPBF.Relation, 4));
};


/**
 * @param {!Array<!proto.OSMPBF.Relation>} value
 * @return {!proto.OSMPBF.PrimitiveGroup} returns this
*/
proto.OSMPBF.PrimitiveGroup.prototype.setRelationsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.OSMPBF.Relation=} opt_value
 * @param {number=} opt_index
 * @return {!proto.OSMPBF.Relation}
 */
proto.OSMPBF.PrimitiveGroup.prototype.addRelations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.OSMPBF.Relation, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.OSMPBF.PrimitiveGroup} returns this
 */
proto.OSMPBF.PrimitiveGroup.prototype.clearRelationsList = function() {
  return this.setRelationsList([]);
};


/**
 * repeated ChangeSet changesets = 5;
 * @return {!Array<!proto.OSMPBF.ChangeSet>}
 */
proto.OSMPBF.PrimitiveGroup.prototype.getChangesetsList = function() {
  return /** @type{!Array<!proto.OSMPBF.ChangeSet>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.OSMPBF.ChangeSet, 5));
};


/**
 * @param {!Array<!proto.OSMPBF.ChangeSet>} value
 * @return {!proto.OSMPBF.PrimitiveGroup} returns this
*/
proto.OSMPBF.PrimitiveGroup.prototype.setChangesetsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.OSMPBF.ChangeSet=} opt_value
 * @param {number=} opt_index
 * @return {!proto.OSMPBF.ChangeSet}
 */
proto.OSMPBF.PrimitiveGroup.prototype.addChangesets = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.OSMPBF.ChangeSet, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.OSMPBF.PrimitiveGroup} returns this
 */
proto.OSMPBF.PrimitiveGroup.prototype.clearChangesetsList = function() {
  return this.setChangesetsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.OSMPBF.StringTable.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.OSMPBF.StringTable.prototype.toObject = function(opt_includeInstance) {
  return proto.OSMPBF.StringTable.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.OSMPBF.StringTable} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.OSMPBF.StringTable.toObject = function(includeInstance, msg) {
  var f, obj = {
    sList: msg.getSList_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.OSMPBF.StringTable}
 */
proto.OSMPBF.StringTable.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.OSMPBF.StringTable;
  return proto.OSMPBF.StringTable.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.OSMPBF.StringTable} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.OSMPBF.StringTable}
 */
proto.OSMPBF.StringTable.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addS(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.OSMPBF.StringTable.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.OSMPBF.StringTable.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.OSMPBF.StringTable} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.OSMPBF.StringTable.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      1,
      f
    );
  }
};


/**
 * repeated bytes s = 1;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.OSMPBF.StringTable.prototype.getSList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * repeated bytes s = 1;
 * This is a type-conversion wrapper around `getSList()`
 * @return {!Array<string>}
 */
proto.OSMPBF.StringTable.prototype.getSList_asB64 = function() {
  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(
      this.getSList()));
};


/**
 * repeated bytes s = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSList()`
 * @return {!Array<!Uint8Array>}
 */
proto.OSMPBF.StringTable.prototype.getSList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
      this.getSList()));
};


/**
 * @param {!(Array<!Uint8Array>|Array<string>)} value
 * @return {!proto.OSMPBF.StringTable} returns this
 */
proto.OSMPBF.StringTable.prototype.setSList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 * @return {!proto.OSMPBF.StringTable} returns this
 */
proto.OSMPBF.StringTable.prototype.addS = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.OSMPBF.StringTable} returns this
 */
proto.OSMPBF.StringTable.prototype.clearSList = function() {
  return this.setSList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.OSMPBF.Info.prototype.toObject = function(opt_includeInstance) {
  return proto.OSMPBF.Info.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.OSMPBF.Info} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.OSMPBF.Info.toObject = function(includeInstance, msg) {
  var f, obj = {
    version: jspb.Message.getFieldWithDefault(msg, 1, -1),
    timestamp: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    changeset: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    uid: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    userSid: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    visible: (f = jspb.Message.getBooleanField(msg, 6)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.OSMPBF.Info}
 */
proto.OSMPBF.Info.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.OSMPBF.Info;
  return proto.OSMPBF.Info.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.OSMPBF.Info} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.OSMPBF.Info}
 */
proto.OSMPBF.Info.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setVersion(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimestamp(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setChangeset(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUid(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setUserSid(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setVisible(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.OSMPBF.Info.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.OSMPBF.Info.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.OSMPBF.Info} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.OSMPBF.Info.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeBool(
      6,
      f
    );
  }
};


/**
 * optional int32 version = 1;
 * @return {number}
 */
proto.OSMPBF.Info.prototype.getVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, -1));
};


/**
 * @param {number} value
 * @return {!proto.OSMPBF.Info} returns this
 */
proto.OSMPBF.Info.prototype.setVersion = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.OSMPBF.Info} returns this
 */
proto.OSMPBF.Info.prototype.clearVersion = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.OSMPBF.Info.prototype.hasVersion = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int64 timestamp = 2;
 * @return {number}
 */
proto.OSMPBF.Info.prototype.getTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.OSMPBF.Info} returns this
 */
proto.OSMPBF.Info.prototype.setTimestamp = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.OSMPBF.Info} returns this
 */
proto.OSMPBF.Info.prototype.clearTimestamp = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.OSMPBF.Info.prototype.hasTimestamp = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int64 changeset = 3;
 * @return {number}
 */
proto.OSMPBF.Info.prototype.getChangeset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.OSMPBF.Info} returns this
 */
proto.OSMPBF.Info.prototype.setChangeset = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.OSMPBF.Info} returns this
 */
proto.OSMPBF.Info.prototype.clearChangeset = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.OSMPBF.Info.prototype.hasChangeset = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int32 uid = 4;
 * @return {number}
 */
proto.OSMPBF.Info.prototype.getUid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.OSMPBF.Info} returns this
 */
proto.OSMPBF.Info.prototype.setUid = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.OSMPBF.Info} returns this
 */
proto.OSMPBF.Info.prototype.clearUid = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.OSMPBF.Info.prototype.hasUid = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint32 user_sid = 5;
 * @return {number}
 */
proto.OSMPBF.Info.prototype.getUserSid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.OSMPBF.Info} returns this
 */
proto.OSMPBF.Info.prototype.setUserSid = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.OSMPBF.Info} returns this
 */
proto.OSMPBF.Info.prototype.clearUserSid = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.OSMPBF.Info.prototype.hasUserSid = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bool visible = 6;
 * @return {boolean}
 */
proto.OSMPBF.Info.prototype.getVisible = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.OSMPBF.Info} returns this
 */
proto.OSMPBF.Info.prototype.setVisible = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.OSMPBF.Info} returns this
 */
proto.OSMPBF.Info.prototype.clearVisible = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.OSMPBF.Info.prototype.hasVisible = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.OSMPBF.DenseInfo.repeatedFields_ = [1,2,3,4,5,6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.OSMPBF.DenseInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.OSMPBF.DenseInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.OSMPBF.DenseInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.OSMPBF.DenseInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    versionList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    timestampList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    changesetList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    uidList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    userSidList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,
    visibleList: (f = jspb.Message.getRepeatedBooleanField(msg, 6)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.OSMPBF.DenseInfo}
 */
proto.OSMPBF.DenseInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.OSMPBF.DenseInfo;
  return proto.OSMPBF.DenseInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.OSMPBF.DenseInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.OSMPBF.DenseInfo}
 */
proto.OSMPBF.DenseInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addVersion(values[i]);
      }
      break;
    case 2:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedSint64() : [reader.readSint64()]);
      for (var i = 0; i < values.length; i++) {
        msg.addTimestamp(values[i]);
      }
      break;
    case 3:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedSint64() : [reader.readSint64()]);
      for (var i = 0; i < values.length; i++) {
        msg.addChangeset(values[i]);
      }
      break;
    case 4:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedSint32() : [reader.readSint32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addUid(values[i]);
      }
      break;
    case 5:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedSint32() : [reader.readSint32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addUserSid(values[i]);
      }
      break;
    case 6:
      var values = /** @type {!Array<boolean>} */ (reader.isDelimited() ? reader.readPackedBool() : [reader.readBool()]);
      for (var i = 0; i < values.length; i++) {
        msg.addVisible(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.OSMPBF.DenseInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.OSMPBF.DenseInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.OSMPBF.DenseInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.OSMPBF.DenseInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVersionList();
  if (f.length > 0) {
    writer.writePackedInt32(
      1,
      f
    );
  }
  f = message.getTimestampList();
  if (f.length > 0) {
    writer.writePackedSint64(
      2,
      f
    );
  }
  f = message.getChangesetList();
  if (f.length > 0) {
    writer.writePackedSint64(
      3,
      f
    );
  }
  f = message.getUidList();
  if (f.length > 0) {
    writer.writePackedSint32(
      4,
      f
    );
  }
  f = message.getUserSidList();
  if (f.length > 0) {
    writer.writePackedSint32(
      5,
      f
    );
  }
  f = message.getVisibleList();
  if (f.length > 0) {
    writer.writePackedBool(
      6,
      f
    );
  }
};


/**
 * repeated int32 version = 1;
 * @return {!Array<number>}
 */
proto.OSMPBF.DenseInfo.prototype.getVersionList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.OSMPBF.DenseInfo} returns this
 */
proto.OSMPBF.DenseInfo.prototype.setVersionList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.OSMPBF.DenseInfo} returns this
 */
proto.OSMPBF.DenseInfo.prototype.addVersion = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.OSMPBF.DenseInfo} returns this
 */
proto.OSMPBF.DenseInfo.prototype.clearVersionList = function() {
  return this.setVersionList([]);
};


/**
 * repeated sint64 timestamp = 2;
 * @return {!Array<number>}
 */
proto.OSMPBF.DenseInfo.prototype.getTimestampList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.OSMPBF.DenseInfo} returns this
 */
proto.OSMPBF.DenseInfo.prototype.setTimestampList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.OSMPBF.DenseInfo} returns this
 */
proto.OSMPBF.DenseInfo.prototype.addTimestamp = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.OSMPBF.DenseInfo} returns this
 */
proto.OSMPBF.DenseInfo.prototype.clearTimestampList = function() {
  return this.setTimestampList([]);
};


/**
 * repeated sint64 changeset = 3;
 * @return {!Array<number>}
 */
proto.OSMPBF.DenseInfo.prototype.getChangesetList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.OSMPBF.DenseInfo} returns this
 */
proto.OSMPBF.DenseInfo.prototype.setChangesetList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.OSMPBF.DenseInfo} returns this
 */
proto.OSMPBF.DenseInfo.prototype.addChangeset = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.OSMPBF.DenseInfo} returns this
 */
proto.OSMPBF.DenseInfo.prototype.clearChangesetList = function() {
  return this.setChangesetList([]);
};


/**
 * repeated sint32 uid = 4;
 * @return {!Array<number>}
 */
proto.OSMPBF.DenseInfo.prototype.getUidList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.OSMPBF.DenseInfo} returns this
 */
proto.OSMPBF.DenseInfo.prototype.setUidList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.OSMPBF.DenseInfo} returns this
 */
proto.OSMPBF.DenseInfo.prototype.addUid = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.OSMPBF.DenseInfo} returns this
 */
proto.OSMPBF.DenseInfo.prototype.clearUidList = function() {
  return this.setUidList([]);
};


/**
 * repeated sint32 user_sid = 5;
 * @return {!Array<number>}
 */
proto.OSMPBF.DenseInfo.prototype.getUserSidList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.OSMPBF.DenseInfo} returns this
 */
proto.OSMPBF.DenseInfo.prototype.setUserSidList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.OSMPBF.DenseInfo} returns this
 */
proto.OSMPBF.DenseInfo.prototype.addUserSid = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.OSMPBF.DenseInfo} returns this
 */
proto.OSMPBF.DenseInfo.prototype.clearUserSidList = function() {
  return this.setUserSidList([]);
};


/**
 * repeated bool visible = 6;
 * @return {!Array<boolean>}
 */
proto.OSMPBF.DenseInfo.prototype.getVisibleList = function() {
  return /** @type {!Array<boolean>} */ (jspb.Message.getRepeatedBooleanField(this, 6));
};


/**
 * @param {!Array<boolean>} value
 * @return {!proto.OSMPBF.DenseInfo} returns this
 */
proto.OSMPBF.DenseInfo.prototype.setVisibleList = function(value) {
  return jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {boolean} value
 * @param {number=} opt_index
 * @return {!proto.OSMPBF.DenseInfo} returns this
 */
proto.OSMPBF.DenseInfo.prototype.addVisible = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.OSMPBF.DenseInfo} returns this
 */
proto.OSMPBF.DenseInfo.prototype.clearVisibleList = function() {
  return this.setVisibleList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.OSMPBF.ChangeSet.prototype.toObject = function(opt_includeInstance) {
  return proto.OSMPBF.ChangeSet.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.OSMPBF.ChangeSet} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.OSMPBF.ChangeSet.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.OSMPBF.ChangeSet}
 */
proto.OSMPBF.ChangeSet.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.OSMPBF.ChangeSet;
  return proto.OSMPBF.ChangeSet.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.OSMPBF.ChangeSet} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.OSMPBF.ChangeSet}
 */
proto.OSMPBF.ChangeSet.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.OSMPBF.ChangeSet.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.OSMPBF.ChangeSet.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.OSMPBF.ChangeSet} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.OSMPBF.ChangeSet.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * required int64 id = 1;
 * @return {number}
 */
proto.OSMPBF.ChangeSet.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.OSMPBF.ChangeSet} returns this
 */
proto.OSMPBF.ChangeSet.prototype.setId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.OSMPBF.ChangeSet} returns this
 */
proto.OSMPBF.ChangeSet.prototype.clearId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.OSMPBF.ChangeSet.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.OSMPBF.Node.repeatedFields_ = [2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.OSMPBF.Node.prototype.toObject = function(opt_includeInstance) {
  return proto.OSMPBF.Node.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.OSMPBF.Node} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.OSMPBF.Node.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    keysList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    valsList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    info: (f = msg.getInfo()) && proto.OSMPBF.Info.toObject(includeInstance, f),
    lat: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,
    lon: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.OSMPBF.Node}
 */
proto.OSMPBF.Node.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.OSMPBF.Node;
  return proto.OSMPBF.Node.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.OSMPBF.Node} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.OSMPBF.Node}
 */
proto.OSMPBF.Node.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readSint64());
      msg.setId(value);
      break;
    case 2:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addKeys(values[i]);
      }
      break;
    case 3:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addVals(values[i]);
      }
      break;
    case 4:
      var value = new proto.OSMPBF.Info;
      reader.readMessage(value,proto.OSMPBF.Info.deserializeBinaryFromReader);
      msg.setInfo(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readSint64());
      msg.setLat(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readSint64());
      msg.setLon(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.OSMPBF.Node.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.OSMPBF.Node.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.OSMPBF.Node} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.OSMPBF.Node.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeSint64(
      1,
      f
    );
  }
  f = message.getKeysList();
  if (f.length > 0) {
    writer.writePackedUint32(
      2,
      f
    );
  }
  f = message.getValsList();
  if (f.length > 0) {
    writer.writePackedUint32(
      3,
      f
    );
  }
  f = message.getInfo();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.OSMPBF.Info.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeSint64(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeSint64(
      9,
      f
    );
  }
};


/**
 * required sint64 id = 1;
 * @return {number}
 */
proto.OSMPBF.Node.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.OSMPBF.Node} returns this
 */
proto.OSMPBF.Node.prototype.setId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.OSMPBF.Node} returns this
 */
proto.OSMPBF.Node.prototype.clearId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.OSMPBF.Node.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated uint32 keys = 2;
 * @return {!Array<number>}
 */
proto.OSMPBF.Node.prototype.getKeysList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.OSMPBF.Node} returns this
 */
proto.OSMPBF.Node.prototype.setKeysList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.OSMPBF.Node} returns this
 */
proto.OSMPBF.Node.prototype.addKeys = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.OSMPBF.Node} returns this
 */
proto.OSMPBF.Node.prototype.clearKeysList = function() {
  return this.setKeysList([]);
};


/**
 * repeated uint32 vals = 3;
 * @return {!Array<number>}
 */
proto.OSMPBF.Node.prototype.getValsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.OSMPBF.Node} returns this
 */
proto.OSMPBF.Node.prototype.setValsList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.OSMPBF.Node} returns this
 */
proto.OSMPBF.Node.prototype.addVals = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.OSMPBF.Node} returns this
 */
proto.OSMPBF.Node.prototype.clearValsList = function() {
  return this.setValsList([]);
};


/**
 * optional Info info = 4;
 * @return {?proto.OSMPBF.Info}
 */
proto.OSMPBF.Node.prototype.getInfo = function() {
  return /** @type{?proto.OSMPBF.Info} */ (
    jspb.Message.getWrapperField(this, proto.OSMPBF.Info, 4));
};


/**
 * @param {?proto.OSMPBF.Info|undefined} value
 * @return {!proto.OSMPBF.Node} returns this
*/
proto.OSMPBF.Node.prototype.setInfo = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.OSMPBF.Node} returns this
 */
proto.OSMPBF.Node.prototype.clearInfo = function() {
  return this.setInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.OSMPBF.Node.prototype.hasInfo = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * required sint64 lat = 8;
 * @return {number}
 */
proto.OSMPBF.Node.prototype.getLat = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.OSMPBF.Node} returns this
 */
proto.OSMPBF.Node.prototype.setLat = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.OSMPBF.Node} returns this
 */
proto.OSMPBF.Node.prototype.clearLat = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.OSMPBF.Node.prototype.hasLat = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * required sint64 lon = 9;
 * @return {number}
 */
proto.OSMPBF.Node.prototype.getLon = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.OSMPBF.Node} returns this
 */
proto.OSMPBF.Node.prototype.setLon = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.OSMPBF.Node} returns this
 */
proto.OSMPBF.Node.prototype.clearLon = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.OSMPBF.Node.prototype.hasLon = function() {
  return jspb.Message.getField(this, 9) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.OSMPBF.DenseNodes.repeatedFields_ = [1,8,9,10];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.OSMPBF.DenseNodes.prototype.toObject = function(opt_includeInstance) {
  return proto.OSMPBF.DenseNodes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.OSMPBF.DenseNodes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.OSMPBF.DenseNodes.toObject = function(includeInstance, msg) {
  var f, obj = {
    idList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    denseinfo: (f = msg.getDenseinfo()) && proto.OSMPBF.DenseInfo.toObject(includeInstance, f),
    latList: (f = jspb.Message.getRepeatedField(msg, 8)) == null ? undefined : f,
    lonList: (f = jspb.Message.getRepeatedField(msg, 9)) == null ? undefined : f,
    keysValsList: (f = jspb.Message.getRepeatedField(msg, 10)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.OSMPBF.DenseNodes}
 */
proto.OSMPBF.DenseNodes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.OSMPBF.DenseNodes;
  return proto.OSMPBF.DenseNodes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.OSMPBF.DenseNodes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.OSMPBF.DenseNodes}
 */
proto.OSMPBF.DenseNodes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedSint64() : [reader.readSint64()]);
      for (var i = 0; i < values.length; i++) {
        msg.addId(values[i]);
      }
      break;
    case 5:
      var value = new proto.OSMPBF.DenseInfo;
      reader.readMessage(value,proto.OSMPBF.DenseInfo.deserializeBinaryFromReader);
      msg.setDenseinfo(value);
      break;
    case 8:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedSint64() : [reader.readSint64()]);
      for (var i = 0; i < values.length; i++) {
        msg.addLat(values[i]);
      }
      break;
    case 9:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedSint64() : [reader.readSint64()]);
      for (var i = 0; i < values.length; i++) {
        msg.addLon(values[i]);
      }
      break;
    case 10:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addKeysVals(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.OSMPBF.DenseNodes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.OSMPBF.DenseNodes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.OSMPBF.DenseNodes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.OSMPBF.DenseNodes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdList();
  if (f.length > 0) {
    writer.writePackedSint64(
      1,
      f
    );
  }
  f = message.getDenseinfo();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.OSMPBF.DenseInfo.serializeBinaryToWriter
    );
  }
  f = message.getLatList();
  if (f.length > 0) {
    writer.writePackedSint64(
      8,
      f
    );
  }
  f = message.getLonList();
  if (f.length > 0) {
    writer.writePackedSint64(
      9,
      f
    );
  }
  f = message.getKeysValsList();
  if (f.length > 0) {
    writer.writePackedInt32(
      10,
      f
    );
  }
};


/**
 * repeated sint64 id = 1;
 * @return {!Array<number>}
 */
proto.OSMPBF.DenseNodes.prototype.getIdList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.OSMPBF.DenseNodes} returns this
 */
proto.OSMPBF.DenseNodes.prototype.setIdList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.OSMPBF.DenseNodes} returns this
 */
proto.OSMPBF.DenseNodes.prototype.addId = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.OSMPBF.DenseNodes} returns this
 */
proto.OSMPBF.DenseNodes.prototype.clearIdList = function() {
  return this.setIdList([]);
};


/**
 * optional DenseInfo denseinfo = 5;
 * @return {?proto.OSMPBF.DenseInfo}
 */
proto.OSMPBF.DenseNodes.prototype.getDenseinfo = function() {
  return /** @type{?proto.OSMPBF.DenseInfo} */ (
    jspb.Message.getWrapperField(this, proto.OSMPBF.DenseInfo, 5));
};


/**
 * @param {?proto.OSMPBF.DenseInfo|undefined} value
 * @return {!proto.OSMPBF.DenseNodes} returns this
*/
proto.OSMPBF.DenseNodes.prototype.setDenseinfo = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.OSMPBF.DenseNodes} returns this
 */
proto.OSMPBF.DenseNodes.prototype.clearDenseinfo = function() {
  return this.setDenseinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.OSMPBF.DenseNodes.prototype.hasDenseinfo = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * repeated sint64 lat = 8;
 * @return {!Array<number>}
 */
proto.OSMPBF.DenseNodes.prototype.getLatList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 8));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.OSMPBF.DenseNodes} returns this
 */
proto.OSMPBF.DenseNodes.prototype.setLatList = function(value) {
  return jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.OSMPBF.DenseNodes} returns this
 */
proto.OSMPBF.DenseNodes.prototype.addLat = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.OSMPBF.DenseNodes} returns this
 */
proto.OSMPBF.DenseNodes.prototype.clearLatList = function() {
  return this.setLatList([]);
};


/**
 * repeated sint64 lon = 9;
 * @return {!Array<number>}
 */
proto.OSMPBF.DenseNodes.prototype.getLonList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 9));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.OSMPBF.DenseNodes} returns this
 */
proto.OSMPBF.DenseNodes.prototype.setLonList = function(value) {
  return jspb.Message.setField(this, 9, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.OSMPBF.DenseNodes} returns this
 */
proto.OSMPBF.DenseNodes.prototype.addLon = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 9, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.OSMPBF.DenseNodes} returns this
 */
proto.OSMPBF.DenseNodes.prototype.clearLonList = function() {
  return this.setLonList([]);
};


/**
 * repeated int32 keys_vals = 10;
 * @return {!Array<number>}
 */
proto.OSMPBF.DenseNodes.prototype.getKeysValsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 10));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.OSMPBF.DenseNodes} returns this
 */
proto.OSMPBF.DenseNodes.prototype.setKeysValsList = function(value) {
  return jspb.Message.setField(this, 10, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.OSMPBF.DenseNodes} returns this
 */
proto.OSMPBF.DenseNodes.prototype.addKeysVals = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 10, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.OSMPBF.DenseNodes} returns this
 */
proto.OSMPBF.DenseNodes.prototype.clearKeysValsList = function() {
  return this.setKeysValsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.OSMPBF.Way.repeatedFields_ = [2,3,8,9,10];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.OSMPBF.Way.prototype.toObject = function(opt_includeInstance) {
  return proto.OSMPBF.Way.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.OSMPBF.Way} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.OSMPBF.Way.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    keysList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    valsList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    info: (f = msg.getInfo()) && proto.OSMPBF.Info.toObject(includeInstance, f),
    refsList: (f = jspb.Message.getRepeatedField(msg, 8)) == null ? undefined : f,
    latList: (f = jspb.Message.getRepeatedField(msg, 9)) == null ? undefined : f,
    lonList: (f = jspb.Message.getRepeatedField(msg, 10)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.OSMPBF.Way}
 */
proto.OSMPBF.Way.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.OSMPBF.Way;
  return proto.OSMPBF.Way.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.OSMPBF.Way} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.OSMPBF.Way}
 */
proto.OSMPBF.Way.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addKeys(values[i]);
      }
      break;
    case 3:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addVals(values[i]);
      }
      break;
    case 4:
      var value = new proto.OSMPBF.Info;
      reader.readMessage(value,proto.OSMPBF.Info.deserializeBinaryFromReader);
      msg.setInfo(value);
      break;
    case 8:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedSint64() : [reader.readSint64()]);
      for (var i = 0; i < values.length; i++) {
        msg.addRefs(values[i]);
      }
      break;
    case 9:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedSint64() : [reader.readSint64()]);
      for (var i = 0; i < values.length; i++) {
        msg.addLat(values[i]);
      }
      break;
    case 10:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedSint64() : [reader.readSint64()]);
      for (var i = 0; i < values.length; i++) {
        msg.addLon(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.OSMPBF.Way.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.OSMPBF.Way.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.OSMPBF.Way} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.OSMPBF.Way.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getKeysList();
  if (f.length > 0) {
    writer.writePackedUint32(
      2,
      f
    );
  }
  f = message.getValsList();
  if (f.length > 0) {
    writer.writePackedUint32(
      3,
      f
    );
  }
  f = message.getInfo();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.OSMPBF.Info.serializeBinaryToWriter
    );
  }
  f = message.getRefsList();
  if (f.length > 0) {
    writer.writePackedSint64(
      8,
      f
    );
  }
  f = message.getLatList();
  if (f.length > 0) {
    writer.writePackedSint64(
      9,
      f
    );
  }
  f = message.getLonList();
  if (f.length > 0) {
    writer.writePackedSint64(
      10,
      f
    );
  }
};


/**
 * required int64 id = 1;
 * @return {number}
 */
proto.OSMPBF.Way.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.OSMPBF.Way} returns this
 */
proto.OSMPBF.Way.prototype.setId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.OSMPBF.Way} returns this
 */
proto.OSMPBF.Way.prototype.clearId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.OSMPBF.Way.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated uint32 keys = 2;
 * @return {!Array<number>}
 */
proto.OSMPBF.Way.prototype.getKeysList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.OSMPBF.Way} returns this
 */
proto.OSMPBF.Way.prototype.setKeysList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.OSMPBF.Way} returns this
 */
proto.OSMPBF.Way.prototype.addKeys = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.OSMPBF.Way} returns this
 */
proto.OSMPBF.Way.prototype.clearKeysList = function() {
  return this.setKeysList([]);
};


/**
 * repeated uint32 vals = 3;
 * @return {!Array<number>}
 */
proto.OSMPBF.Way.prototype.getValsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.OSMPBF.Way} returns this
 */
proto.OSMPBF.Way.prototype.setValsList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.OSMPBF.Way} returns this
 */
proto.OSMPBF.Way.prototype.addVals = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.OSMPBF.Way} returns this
 */
proto.OSMPBF.Way.prototype.clearValsList = function() {
  return this.setValsList([]);
};


/**
 * optional Info info = 4;
 * @return {?proto.OSMPBF.Info}
 */
proto.OSMPBF.Way.prototype.getInfo = function() {
  return /** @type{?proto.OSMPBF.Info} */ (
    jspb.Message.getWrapperField(this, proto.OSMPBF.Info, 4));
};


/**
 * @param {?proto.OSMPBF.Info|undefined} value
 * @return {!proto.OSMPBF.Way} returns this
*/
proto.OSMPBF.Way.prototype.setInfo = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.OSMPBF.Way} returns this
 */
proto.OSMPBF.Way.prototype.clearInfo = function() {
  return this.setInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.OSMPBF.Way.prototype.hasInfo = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated sint64 refs = 8;
 * @return {!Array<number>}
 */
proto.OSMPBF.Way.prototype.getRefsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 8));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.OSMPBF.Way} returns this
 */
proto.OSMPBF.Way.prototype.setRefsList = function(value) {
  return jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.OSMPBF.Way} returns this
 */
proto.OSMPBF.Way.prototype.addRefs = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.OSMPBF.Way} returns this
 */
proto.OSMPBF.Way.prototype.clearRefsList = function() {
  return this.setRefsList([]);
};


/**
 * repeated sint64 lat = 9;
 * @return {!Array<number>}
 */
proto.OSMPBF.Way.prototype.getLatList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 9));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.OSMPBF.Way} returns this
 */
proto.OSMPBF.Way.prototype.setLatList = function(value) {
  return jspb.Message.setField(this, 9, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.OSMPBF.Way} returns this
 */
proto.OSMPBF.Way.prototype.addLat = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 9, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.OSMPBF.Way} returns this
 */
proto.OSMPBF.Way.prototype.clearLatList = function() {
  return this.setLatList([]);
};


/**
 * repeated sint64 lon = 10;
 * @return {!Array<number>}
 */
proto.OSMPBF.Way.prototype.getLonList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 10));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.OSMPBF.Way} returns this
 */
proto.OSMPBF.Way.prototype.setLonList = function(value) {
  return jspb.Message.setField(this, 10, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.OSMPBF.Way} returns this
 */
proto.OSMPBF.Way.prototype.addLon = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 10, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.OSMPBF.Way} returns this
 */
proto.OSMPBF.Way.prototype.clearLonList = function() {
  return this.setLonList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.OSMPBF.Relation.repeatedFields_ = [2,3,8,9,10];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.OSMPBF.Relation.prototype.toObject = function(opt_includeInstance) {
  return proto.OSMPBF.Relation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.OSMPBF.Relation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.OSMPBF.Relation.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    keysList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    valsList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    info: (f = msg.getInfo()) && proto.OSMPBF.Info.toObject(includeInstance, f),
    rolesSidList: (f = jspb.Message.getRepeatedField(msg, 8)) == null ? undefined : f,
    memidsList: (f = jspb.Message.getRepeatedField(msg, 9)) == null ? undefined : f,
    typesList: (f = jspb.Message.getRepeatedField(msg, 10)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.OSMPBF.Relation}
 */
proto.OSMPBF.Relation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.OSMPBF.Relation;
  return proto.OSMPBF.Relation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.OSMPBF.Relation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.OSMPBF.Relation}
 */
proto.OSMPBF.Relation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addKeys(values[i]);
      }
      break;
    case 3:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addVals(values[i]);
      }
      break;
    case 4:
      var value = new proto.OSMPBF.Info;
      reader.readMessage(value,proto.OSMPBF.Info.deserializeBinaryFromReader);
      msg.setInfo(value);
      break;
    case 8:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addRolesSid(values[i]);
      }
      break;
    case 9:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedSint64() : [reader.readSint64()]);
      for (var i = 0; i < values.length; i++) {
        msg.addMemids(values[i]);
      }
      break;
    case 10:
      var values = /** @type {!Array<!proto.OSMPBF.Relation.MemberType>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addTypes(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.OSMPBF.Relation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.OSMPBF.Relation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.OSMPBF.Relation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.OSMPBF.Relation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getKeysList();
  if (f.length > 0) {
    writer.writePackedUint32(
      2,
      f
    );
  }
  f = message.getValsList();
  if (f.length > 0) {
    writer.writePackedUint32(
      3,
      f
    );
  }
  f = message.getInfo();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.OSMPBF.Info.serializeBinaryToWriter
    );
  }
  f = message.getRolesSidList();
  if (f.length > 0) {
    writer.writePackedInt32(
      8,
      f
    );
  }
  f = message.getMemidsList();
  if (f.length > 0) {
    writer.writePackedSint64(
      9,
      f
    );
  }
  f = message.getTypesList();
  if (f.length > 0) {
    writer.writePackedEnum(
      10,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.OSMPBF.Relation.MemberType = {
  NODE: 0,
  WAY: 1,
  RELATION: 2
};

/**
 * required int64 id = 1;
 * @return {number}
 */
proto.OSMPBF.Relation.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.OSMPBF.Relation} returns this
 */
proto.OSMPBF.Relation.prototype.setId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.OSMPBF.Relation} returns this
 */
proto.OSMPBF.Relation.prototype.clearId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.OSMPBF.Relation.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated uint32 keys = 2;
 * @return {!Array<number>}
 */
proto.OSMPBF.Relation.prototype.getKeysList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.OSMPBF.Relation} returns this
 */
proto.OSMPBF.Relation.prototype.setKeysList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.OSMPBF.Relation} returns this
 */
proto.OSMPBF.Relation.prototype.addKeys = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.OSMPBF.Relation} returns this
 */
proto.OSMPBF.Relation.prototype.clearKeysList = function() {
  return this.setKeysList([]);
};


/**
 * repeated uint32 vals = 3;
 * @return {!Array<number>}
 */
proto.OSMPBF.Relation.prototype.getValsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.OSMPBF.Relation} returns this
 */
proto.OSMPBF.Relation.prototype.setValsList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.OSMPBF.Relation} returns this
 */
proto.OSMPBF.Relation.prototype.addVals = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.OSMPBF.Relation} returns this
 */
proto.OSMPBF.Relation.prototype.clearValsList = function() {
  return this.setValsList([]);
};


/**
 * optional Info info = 4;
 * @return {?proto.OSMPBF.Info}
 */
proto.OSMPBF.Relation.prototype.getInfo = function() {
  return /** @type{?proto.OSMPBF.Info} */ (
    jspb.Message.getWrapperField(this, proto.OSMPBF.Info, 4));
};


/**
 * @param {?proto.OSMPBF.Info|undefined} value
 * @return {!proto.OSMPBF.Relation} returns this
*/
proto.OSMPBF.Relation.prototype.setInfo = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.OSMPBF.Relation} returns this
 */
proto.OSMPBF.Relation.prototype.clearInfo = function() {
  return this.setInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.OSMPBF.Relation.prototype.hasInfo = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated int32 roles_sid = 8;
 * @return {!Array<number>}
 */
proto.OSMPBF.Relation.prototype.getRolesSidList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 8));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.OSMPBF.Relation} returns this
 */
proto.OSMPBF.Relation.prototype.setRolesSidList = function(value) {
  return jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.OSMPBF.Relation} returns this
 */
proto.OSMPBF.Relation.prototype.addRolesSid = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.OSMPBF.Relation} returns this
 */
proto.OSMPBF.Relation.prototype.clearRolesSidList = function() {
  return this.setRolesSidList([]);
};


/**
 * repeated sint64 memids = 9;
 * @return {!Array<number>}
 */
proto.OSMPBF.Relation.prototype.getMemidsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 9));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.OSMPBF.Relation} returns this
 */
proto.OSMPBF.Relation.prototype.setMemidsList = function(value) {
  return jspb.Message.setField(this, 9, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.OSMPBF.Relation} returns this
 */
proto.OSMPBF.Relation.prototype.addMemids = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 9, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.OSMPBF.Relation} returns this
 */
proto.OSMPBF.Relation.prototype.clearMemidsList = function() {
  return this.setMemidsList([]);
};


/**
 * repeated MemberType types = 10;
 * @return {!Array<!proto.OSMPBF.Relation.MemberType>}
 */
proto.OSMPBF.Relation.prototype.getTypesList = function() {
  return /** @type {!Array<!proto.OSMPBF.Relation.MemberType>} */ (jspb.Message.getRepeatedField(this, 10));
};


/**
 * @param {!Array<!proto.OSMPBF.Relation.MemberType>} value
 * @return {!proto.OSMPBF.Relation} returns this
 */
proto.OSMPBF.Relation.prototype.setTypesList = function(value) {
  return jspb.Message.setField(this, 10, value || []);
};


/**
 * @param {!proto.OSMPBF.Relation.MemberType} value
 * @param {number=} opt_index
 * @return {!proto.OSMPBF.Relation} returns this
 */
proto.OSMPBF.Relation.prototype.addTypes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 10, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.OSMPBF.Relation} returns this
 */
proto.OSMPBF.Relation.prototype.clearTypesList = function() {
  return this.setTypesList([]);
};


goog.object.extend(exports, proto.OSMPBF);
